"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
const inversify_1 = require("inversify");
const types_1 = require("./types");
const bot_1 = require("./src/bot");
const discord_js_1 = require("discord.js");
const appel_trigger_1 = require("./src/commands/appel-trigger");
const embed_roll_1 = require("./src/services/embed-roll");
const date_1 = require("./src/utils/date");
const cron_message_saint_1 = require("./src/services/cron-message-saint");
const message_saint_1 = require("./src/services/message.saint");
const bot_presence_1 = require("./src/services/bot-presence");
const help_trigger_1 = require("./src/commands/help-trigger");
const help_res_1 = require("./src/services/help-res");
const file_roll_1 = require("./src/services/file-roll");
const saint_trigger_1 = require("./src/commands/saint-trigger");
let container = new inversify_1.Container();
container.bind(types_1.TYPES.Bot).to(bot_1.Bot).inSingletonScope();
container.bind(types_1.TYPES.Client).toConstantValue(new discord_js_1.Client());
container.bind(types_1.TYPES.Token).toConstantValue(process.env.TOKEN);
container.bind(types_1.TYPES.Key).toConstantValue(process.env.KEY);
container.bind(types_1.TYPES.Prefix).toConstantValue(process.env.PREFIX);
container.bind(types_1.TYPES.AppelTrigger).to(appel_trigger_1.AppelTrigger).inSingletonScope();
container.bind(types_1.TYPES.HelpTrigger).to(help_trigger_1.HelpTrigger).inSingletonScope();
container.bind(types_1.TYPES.SaintTrigger).to(saint_trigger_1.SaintTrigger).inSingletonScope();
container.bind(types_1.TYPES.EmbedRoll).to(embed_roll_1.EmbedRoll).inSingletonScope();
container.bind(types_1.TYPES.DateFormat).to(date_1.DateFormat).inSingletonScope();
container.bind(types_1.TYPES.SaintMessage).to(message_saint_1.SaintMessage).inSingletonScope();
container.bind(types_1.TYPES.HelpRes).to(help_res_1.HelpRes).inSingletonScope();
container.bind(types_1.TYPES.FileRoll).to(file_roll_1.FileRoll).inSingletonScope();
container.bind(types_1.TYPES.CronSaintMessage).to(cron_message_saint_1.CronSaintMessage).inSingletonScope();
container.bind(types_1.TYPES.ActivityGame).to(bot_presence_1.BotPresence).inSingletonScope();
exports.default = container;
//# sourceMappingURL=inversify.config.js.map